if: tag IS blank
branches:
  except:
    - travis-storage

language: cpp
dist: bionic
sudo: true
osx_image: xcode11

os:
  - linux
  - osx
  - windows
compiler:
  - gcc
  - clang
env:
  - BUILD_SHARED_LIBS=OFF TINYSPLINE_FLOAT_PRECISION=OFF
  - BUILD_SHARED_LIBS=OFF TINYSPLINE_FLOAT_PRECISION=ON
  - BUILD_SHARED_LIBS=ON TINYSPLINE_FLOAT_PRECISION=OFF
  - BUILD_SHARED_LIBS=ON TINYSPLINE_FLOAT_PRECISION=ON

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -qq update && sudo apt-get install -y cmake; fi;
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then choco install cmake; fi;
script:
  # Build, test, and install library
  - if [ "$TRAVIS_OS_NAME" == "windows" ] && [ "$CC" == "gcc" ]; then cmake -G "Visual Studio 15 2017" -A Win32 .; fi;
  - if [ "$TRAVIS_OS_NAME" == "windows" ] && [ "$CC" == "clang" ]; then cmake -G "Visual Studio 15 2017" -A x64 .; fi;
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then cmake -DCMAKE_INSTALL_PREFIX=C:/tinyspline -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib .; fi;
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cmake -DCMAKE_INSTALL_PREFIX=~/tinyspline .; fi;
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib .; fi;
  - cmake --build .
  - ctest
  - cmake --build . --target install
  # Test installed files
  - pushd test/pkg
  - mkdir build
  - pushd build
  - if [ "$TRAVIS_OS_NAME" == "windows" ] && [ "$CC" == "gcc" ]; then cmake -G "Visual Studio 15 2017" -A Win32 -DCMAKE_PREFIX_PATH=C:/tinyspline ..; fi;
  - if [ "$TRAVIS_OS_NAME" == "windows" ] && [ "$CC" == "clang" ]; then cmake -G "Visual Studio 15 2017" -A x64 -DCMAKE_PREFIX_PATH=C:/tinyspline ..; fi;
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cmake -DCMAKE_PREFIX_PATH=~/tinyspline ..; fi;
  - cmake --build .
  - ctest
  - popd
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then PKG_CONFIG_PATH=~/tinyspline/lib64/pkgconfig make; fi;
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then LD_LIBRARY_PATH=~/tinyspline/lib64 make test; fi;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then DYLD_LIBRARY_PATH=~/tinyspline/lib64 make test; fi;
  - popd

jobs:
  include:
    - stage: Deploy Binaries (Windows VM)
      os: windows
      install:
        - choco install cmake
        - choco install swig
        - choco install python2
        - C:\\Python27\\python -m pip install -U pip setuptools
        - C:\\Python27\\python -m pip install wheel
        - choco install python3
        - C:\\Python39\\python -m pip install -U pip setuptools
        - C:\\Python39\\python -m pip install wheel
      script:
        - mkdir python2
        - pushd python2
        - cmake -G "Visual Studio 15 2017" -A x64 -DTINYSPLINE_ENABLE_PYTHON=True -DTINYSPLINE_PYTHON_VERSION=2 ..
        - C:\\Python27\\python setup.py bdist_wheel
        - popd
        - mkdir python3
        - pushd python3
        - cmake -G "Visual Studio 15 2017" -A x64 -DTINYSPLINE_ENABLE_PYTHON=True -DTINYSPLINE_PYTHON_VERSION=3 ..
        - C:\\Python39\\python setup.py bdist_wheel
        - popd
        - git config user.name "Travis CI"
        - git config user.email "travis@tinyspline.org"
        - git remote add gh https://${TRAVIS_REPO_SLUG%/*}:${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git branch -D travis-storage >/dev/null 2>&1 || true
        - git checkout --orphan travis-storage
        - cp python2/dist/tinyspline*.whl ./
        - cp python3/dist/tinyspline*.whl ./
        - git add tinyspline*.whl
        - git commit tinyspline*.whl -m "Windows build for ${TRAVIS_COMMIT}"
        - git push -f gh travis-storage >/dev/null 2>&1
        - git remote remove gh
    - stage: Deploy Binaries (Linux Docker)
      os: linux
      sudo: true
      services: docker
      install:
        - sudo apt-get -qq update && sudo apt-get install -y luarocks
      script:
        - pushd tools/ci
        - ./build.linux-x86_64.sh
        - ./build.macosx-x86_64.sh
        - ./build.windows-x86_64.sh
        - ./bundle.sh
        - popd
      before_deploy:
        - git tag -f snapshot
        - git remote add gh https://${TRAVIS_REPO_SLUG%/*}:${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f gh snapshot >/dev/null 2>&1
        - git fetch gh >/dev/null 2>&1
        - git checkout gh/travis-storage tinyspline*.whl
        - mv tinyspline*.whl tools/ci/tinyspline
        - git remote remove gh
      deploy:
        - provider: releases
          api-key: $GITHUB_TOKEN
          skip_cleanup: true
          file_glob: true
          file: tools/ci/tinyspline/*
          name: Snapshot build
          prerelease: true
          overwrite: true
          target_commitish: $TRAVIS_COMMIT
          on:
            branch: master
    - stage: Deploy Website
      service: docker
      install: skip
      script:
        - pushd tools/ci
        - ./build.docs.sh
        - popd
      deploy:
        - provider: pages
          github_token: $GITHUB_TOKEN
          skip_cleanup: true
          local_dir: tools/ci/build.docs/html
          on:
            branch: master
